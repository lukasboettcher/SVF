name: svf-build

# Triggers the workflow on push or pull request events
on: [push, pull_request]

# Customize the env variable
env:
  SVF_CTIR: 1 
  SVF_Z3: 1

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest]
    steps:
      # checkout the repo
      - uses: actions/checkout@v2
      # setup the environment 
      - name: env-setup
        run: |
          echo $RUNNER_OS
          if [ "$RUNNER_OS" = "Linux" ]; then sudo apt-get update       ; fi
          if [ "$RUNNER_OS" = "Linux" ]; then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test       ; fi
          if [ "$RUNNER_OS" = "Linux" ]; then sudo apt-get update       ; fi
          if [ "$RUNNER_OS" = "Linux" ]; then sudo apt-get install cmake gcc g++ nodejs doxygen graphviz; fi
          if [ "$RUNNER_OS" = "macOS" ]; then export SDKROOT="/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.1.sdk" ; fi
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ]; then git config --global user.email ${{secrets.npm_email}}; fi
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ]; then git config --global user.name "GitHub Actions Build"; fi
      
      # build-svf
      - name: build-svf
        run: |
          cd $GITHUB_WORKSPACE
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ]; then git stash --all   ; fi
          echo $(pwd)
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ]; then npm_version=`npm v svf-tools version`; fi
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ] && [ "$RUNNER_OS" = "Linux" ]; then sed  -i '/version/s/[^:]*$/'"\"${npm_version}\",/" package.json  ; fi
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ] && [ "$RUNNER_OS" = "Linux" ]; then git add .    ; fi
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ] && [ "$RUNNER_OS" = "Linux" ] && [ -n "$(git status -s)" ]; then git commit -m'update version'  ; fi 
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ] && [ "$RUNNER_OS" = "Linux" ]; then npm version patch; fi
          git clone "https://github.com/SVF-tools/Test-Suite.git";
          ${{github.workspace}}/build.sh

      # run ctest
      - name: ctest points-to
        working-directory: ${{github.workspace}}/Release-build
        run: 
          ctest -R points-to -VV
      
      - name: ctest differential analysis
        working-directory: ${{github.workspace}}/Release-build
        run: 
          ctest -R diff_tests -VV

      - name: ctest mem_leak
        working-directory: ${{github.workspace}}/Release-build
        run:
          ctest -R mem_leak -VV

      # update doxygen
      - name: update-doxygen
        run: |
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ] && [ "$RUNNER_OS" = "Linux" ]; then cd $GITHUB_WORKSPACE/doc && doxygen doxygen.config; fi
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ] && [ "$RUNNER_OS" = "Linux" ]; then cd $GITHUB_WORKSPACE  && git clone https://github.com/SVF-tools/SVF-doxygen.git       ; fi
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ] && [ "$RUNNER_OS" = "Linux" ]; then cp -r $GITHUB_WORKSPACE/doc/generated-doc/html $GITHUB_WORKSPACE/SVF-doxygen/html       ; fi
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ] && [ "$RUNNER_OS" = "Linux" ]; then cd $GITHUB_WORKSPACE/SVF-doxygen       ; fi
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ] && [ "$RUNNER_OS" = "Linux" ]; then git add .       ; fi
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ] && [ "$RUNNER_OS" = "Linux" ] && [ -n "$(git status -s)" ]; then git commit -m"update SVF doxygen"       ; fi
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ] && [ "$RUNNER_OS" = "Linux" ]; then git push https://yuleisui:${{secrets.yulei_git_key}}@github.com/SVF-tools/SVF-doxygen.git   HEAD:master       ; fi
      
      # update-svf-lib
      - name: update-svf-lib
        run: |
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ]; then cd $GITHUB_WORKSPACE        ; fi
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ]; then cd ..     ; fi
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ]; then git clone https://github.com/SVF-tools/SVF-npm.git; fi
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ] && [ "$RUNNER_OS" = "Linux" ]; then export osVersion="linux"; fi
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ] && [ "$RUNNER_OS" = "macOS" ]; then export osVersion="osx"; fi
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ]; then echo $osVersion   ; fi
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ]; then cp -rf $GITHUB_WORKSPACE/include ./SVF-npm/SVF-${osVersion}/        ; fi
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ]; then cp $GITHUB_WORKSPACE/Release-build/lib/libSvf.a ./SVF-npm/SVF-${osVersion}/Release-build/lib        ; fi
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ]; then cp $GITHUB_WORKSPACE/Release-build/lib/CUDD/libCudd.a ./SVF-npm/SVF-${osVersion}/Release-build/lib/CUDD       ; fi
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ]; then cd SVF-npm        ; fi
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ]; then git add .       ; fi
          if [ -n "$(git status -s)" ]; then git commit -m'update svflib' ; fi
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ]; then npm version patch       ; fi
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ]; then git push https://yuleisui:${{secrets.yulei_git_key}}@github.com/SVF-tools/SVF-npm.git   HEAD:master       ; fi
          if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ]; then cd $GITHUB_WORKSPACE      ; fi

      # publish svf
      - uses: actions/setup-node@v2
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - name: publish-svf
        run: if [ "${{github.event_name}}" = "push" ] && [ "${{github.ref == 'refs/heads/master' }}" ] && [ "$RUNNER_OS" = "Linux" ]; then npm publish; fi
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

  
